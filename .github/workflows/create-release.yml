name: Create Release

on:
  push:
    branches:
    - main

permissions:
  contents: write

jobs:
  dry-run:
    name: Dry Run
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Semantic Release Dry Run
      uses: cycjimmy/semantic-release-action@v3
      id: dry-release
      with:
        dry_run: true
        extra_plugins: |
          conventional-changelog-conventionalcommits@5.0.0
          @semantic-release/changelog@6.0.3
          @semantic-release/commit-analyzer@9.0.2
          @semantic-release/github@8.0.5
          @semantic-release/release-notes-generator@10.0.3
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    outputs:
      published: ${{ steps.dry-release.outputs.new_release_published }}
      new-version: ${{ steps.dry-release.outputs.new_release_version }}

  create-build:
    name: Create Build
    runs-on: windows-latest
    needs:
    - dry-run
    if: needs.dry-run.outputs.published == 'true'

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Setup Python
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"

    - name: Update Pip
      shell: bash
      run: |
        python -m pip install --upgrade pip

    - name: Create Build
      shell: bash
      run: |
        python -m venv venv/build
        source venv/build/Scripts/activate
        python -m pip install hatch build pyinstaller
        hatch version ${{ needs.dry-run.outputs.new-version }}
        # Build for PyPi
        python -m build -w
        # Build for Windows
        pyinstaller --specpath ./artifacts --workpath ./artifacts \
          -n wildstruck --distpath ./dist-win -F main.py
        deactivate

    - name: Publish PyPi
      shell: bash
      env:
        TWINE_NON_INTERACTIVE: "1"
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: '${{ secrets.PYPI_API_TOKEN }}'
      run: |
        python -m venv venv/publish
        source venv/publish/Scripts/activate
        python -m pip install twine
        python -m twine upload --verbose --repository testpypi ./dist/*
        deactivate

    - name: Put Executable
      uses: actions/upload-artifact@v4
      with:
        name: executable
        path: ./dist-win/wildstruck.exe
        retention-days: 1

  create-release:
    name: Create Release
    runs-on: ubuntu-latest
    needs:
    - dry-run
    - create-build
    if: needs.dry-run.outputs.published == 'true'

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        persist-credentials: false
        fetch-depth: 0

    - name: Get Executable
      uses: actions/download-artifact@v4
      with:
        name: executable

    - name: Create Release Package
      run: |
        zip -r ./dist-win/wildstruck.zip \
          ./dist-win/wildstruck.exe \
          ./README.md \
          ./wildstruck.json5 \
          ./biomes-test.png

    - name: Generate Token
      id: token
      uses: actions/create-github-app-token@v1
      with:
        app-id: ${{ vars.COOKIE_BOT_APP_ID }}
        private-key: ${{ secrets.COOKIE_BOT_PRIVATE_KEY }}

    # Run this step as late as possible to avoid creating releases for failed pipelines
    - name: Create Release
      id: release
      uses: cycjimmy/semantic-release-action@v3
      with:
        extra_plugins: |
          conventional-changelog-conventionalcommits@5.0.0
          @semantic-release/changelog@6.0.3
          @semantic-release/commit-analyzer@9.0.2
          @semantic-release/github@8.0.5
          @semantic-release/release-notes-generator@10.0.3
      env:
        GH_TOKEN: ${{ steps.token.outputs.token }}
        GIT_AUTHOR_NAME: github-actions[bot]
        GIT_AUTHOR_EMAIL: 41898282+github-actions[bot]@users.noreply.github.com
        GIT_COMMITTER_NAME: github-actions[bot]
        GIT_COMMITTER_EMAIL: 41898282+github-actions[bot]@users.noreply.github.com

    - name: Publish Release Package
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        gh release upload ${{ steps.release.outputs.new_release_git_tag }} ./dist-win/wildstruck.zip
